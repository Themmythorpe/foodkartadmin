{"version":3,"file":"ToggleRefinement.vue_vue&type=template&id=1e8d14ba&lang.js","sources":["../../../../src/components/ToggleRefinement.vue?vue&type=template&id=1e8d14ba&lang.js"],"sourcesContent":["<template>\n  <div\n    v-if=\"state\"\n    :class=\"[suit(), !state.canRefine && suit('', 'noRefinement')]\"\n  >\n    <slot\n      :value=\"state.value\"\n      :can-refine=\"state.canRefine\"\n      :refine=\"state.refine\"\n      :createURL=\"state.createURL\"\n      :send-event=\"state.sendEvent\"\n    >\n      <label :class=\"suit('label')\">\n        <input\n          :class=\"suit('checkbox')\"\n          type=\"checkbox\"\n          :name=\"state.value.name\"\n          :value=\"on\"\n          :checked=\"state.value.isRefined\"\n          @change=\"state.refine(state.value)\"\n        />\n        <span :class=\"suit('labelText')\">{{ label }}</span>\n        <span v-if=\"state.value.count !== null\" :class=\"suit('count')\">{{\n          state.value.count.toLocaleString()\n        }}</span>\n      </label>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectToggleRefinement } from 'instantsearch.js/es/connectors';\n\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createSuitMixin } from '../mixins/suit';\nimport { createWidgetMixin } from '../mixins/widget';\n\nexport default {\n  name: 'AisToggleRefinement',\n  mixins: [\n    createSuitMixin({ name: 'ToggleRefinement' }),\n    createWidgetMixin(\n      {\n        connector: connectToggleRefinement,\n      },\n      {\n        $$widgetType: 'ais.toggleRefinement',\n      }\n    ),\n    createPanelConsumerMixin(),\n  ],\n  props: {\n    attribute: {\n      type: String,\n      required: true,\n    },\n    label: {\n      type: String,\n      required: true,\n    },\n    on: {\n      type: [String, Number, Boolean, Array],\n      required: false,\n      default: true,\n    },\n    off: {\n      type: [String, Number, Boolean, Array],\n      required: false,\n      default: undefined,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        attribute: this.attribute,\n        label: this.label,\n        on: this.on,\n        off: this.off,\n      };\n    },\n  },\n};\n</script>\n"],"names":["_ctx","_createElementBlock","class","canRefine","_renderSlot","value","refine","createURL","sendEvent","_createElementVNode","type","name","$props","checked","isRefined","onChange","count","toLocaleString"],"mappings":"iOAEUA,aADRC,eAEGC,SAAQF,UAASA,QAAMG,WAAaH,8BAErCI,sBACGC,MAAOL,QAAMK,MACbF,UAAYH,QAAMG,UAClBG,OAAQN,QAAMM,OACdC,UAAWP,QAAMO,UACjBC,UAAYR,QAAMQ,6BAEnBC,WAAQP,QAAOF,mBACbS,WACGP,QAAOF,oBACRU,KAAK,WACJC,KAAMX,QAAMK,MAAMM,KAClBN,MAAOO,KACPC,QAASb,QAAMK,MAAMS,UACrBC,wCAAQf,QAAMM,OAAON,QAAMK,qBAE9BI,UAAOP,QAAOF,wBAAsBY,mBACxBZ,QAAMK,MAAMW,WAAxBf,gBAAyCC,QAAOF,oBAC9CA,QAAMK,MAAMW,MAAMC"}